<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="team.managementplatform.mapper.VenueMapper">
  <resultMap id="BaseResultMap" type="team.managementplatform.pojo.Venue">
    <id column="venue_id" jdbcType="INTEGER" property="venueId" />
    <result column="region_id" jdbcType="INTEGER" property="regionId" />
    <result column="venue_name" jdbcType="VARCHAR" property="venueName" />
    <result column="open_time" jdbcType="VARCHAR" property="openTime" />
    <result column="phone" jdbcType="DECIMAL" property="phone" />
    <result column="venue_introduction" jdbcType="VARCHAR" property="venueIntroduction" />
    <result column="address" jdbcType="VARCHAR" property="address" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="team.managementplatform.pojo.Venue">
    <result column="thumbnail" jdbcType="LONGVARBINARY" property="thumbnail" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    venue_id, region_id, venue_name, open_time, phone, venue_introduction, address
  </sql>
  <sql id="Blob_Column_List">
    thumbnail
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="team.managementplatform.pojo.VenueExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from venue
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="team.managementplatform.pojo.VenueExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from venue
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from venue
    where venue_id = #{venueId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from venue
    where venue_id = #{venueId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="team.managementplatform.pojo.VenueExample">
    delete from venue
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="team.managementplatform.pojo.Venue">
    insert into venue (venue_id, region_id, venue_name, 
      open_time, phone, venue_introduction, 
      address, thumbnail)
    values (#{venueId,jdbcType=INTEGER}, #{regionId,jdbcType=INTEGER}, #{venueName,jdbcType=VARCHAR}, 
      #{openTime,jdbcType=VARCHAR}, #{phone,jdbcType=DECIMAL}, #{venueIntroduction,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{thumbnail,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="team.managementplatform.pojo.Venue">
    insert into venue
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="venueId != null">
        venue_id,
      </if>
      <if test="regionId != null">
        region_id,
      </if>
      <if test="venueName != null">
        venue_name,
      </if>
      <if test="openTime != null">
        open_time,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="venueIntroduction != null">
        venue_introduction,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="thumbnail != null">
        thumbnail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="venueId != null">
        #{venueId,jdbcType=INTEGER},
      </if>
      <if test="regionId != null">
        #{regionId,jdbcType=INTEGER},
      </if>
      <if test="venueName != null">
        #{venueName,jdbcType=VARCHAR},
      </if>
      <if test="openTime != null">
        #{openTime,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=DECIMAL},
      </if>
      <if test="venueIntroduction != null">
        #{venueIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="thumbnail != null">
        #{thumbnail,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="team.managementplatform.pojo.VenueExample" resultType="java.lang.Long">
    select count(*) from venue
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update venue
    <set>
      <if test="record.venueId != null">
        venue_id = #{record.venueId,jdbcType=INTEGER},
      </if>
      <if test="record.regionId != null">
        region_id = #{record.regionId,jdbcType=INTEGER},
      </if>
      <if test="record.venueName != null">
        venue_name = #{record.venueName,jdbcType=VARCHAR},
      </if>
      <if test="record.openTime != null">
        open_time = #{record.openTime,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=DECIMAL},
      </if>
      <if test="record.venueIntroduction != null">
        venue_introduction = #{record.venueIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.thumbnail != null">
        thumbnail = #{record.thumbnail,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update venue
    set venue_id = #{record.venueId,jdbcType=INTEGER},
      region_id = #{record.regionId,jdbcType=INTEGER},
      venue_name = #{record.venueName,jdbcType=VARCHAR},
      open_time = #{record.openTime,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=DECIMAL},
      venue_introduction = #{record.venueIntroduction,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      thumbnail = #{record.thumbnail,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update venue
    set venue_id = #{record.venueId,jdbcType=INTEGER},
      region_id = #{record.regionId,jdbcType=INTEGER},
      venue_name = #{record.venueName,jdbcType=VARCHAR},
      open_time = #{record.openTime,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=DECIMAL},
      venue_introduction = #{record.venueIntroduction,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="team.managementplatform.pojo.Venue">
    update venue
    <set>
      <if test="regionId != null">
        region_id = #{regionId,jdbcType=INTEGER},
      </if>
      <if test="venueName != null">
        venue_name = #{venueName,jdbcType=VARCHAR},
      </if>
      <if test="openTime != null">
        open_time = #{openTime,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=DECIMAL},
      </if>
      <if test="venueIntroduction != null">
        venue_introduction = #{venueIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="thumbnail != null">
        thumbnail = #{thumbnail,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where venue_id = #{venueId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="team.managementplatform.pojo.Venue">
    update venue
    set region_id = #{regionId,jdbcType=INTEGER},
      venue_name = #{venueName,jdbcType=VARCHAR},
      open_time = #{openTime,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=DECIMAL},
      venue_introduction = #{venueIntroduction,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      thumbnail = #{thumbnail,jdbcType=LONGVARBINARY}
    where venue_id = #{venueId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="team.managementplatform.pojo.Venue">
    update venue
    set region_id = #{regionId,jdbcType=INTEGER},
      venue_name = #{venueName,jdbcType=VARCHAR},
      open_time = #{openTime,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=DECIMAL},
      venue_introduction = #{venueIntroduction,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR}
    where venue_id = #{venueId,jdbcType=INTEGER}
  </update>
</mapper>