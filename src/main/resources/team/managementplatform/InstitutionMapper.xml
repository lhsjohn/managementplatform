<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="team.managementplatform.mapper.InstitutionMapper">
  <resultMap id="BaseResultMap" type="team.managementplatform.pojo.Institution">
    <id column="institution_id" jdbcType="INTEGER" property="institutionId" />
    <result column="qualification_id" jdbcType="INTEGER" property="qualificationId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_phone" jdbcType="VARCHAR" property="userPhone" />
    <result column="institution_name" jdbcType="VARCHAR" property="institutionName" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="institution_introduction" jdbcType="VARCHAR" property="institutionIntroduction" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    institution_id, qualification_id, user_id, user_phone, institution_name, location, 
    phone, institution_introduction
  </sql>
  <select id="selectByExample" parameterType="team.managementplatform.pojo.InstitutionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from institution
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from institution
    where institution_id = #{institutionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from institution
    where institution_id = #{institutionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="team.managementplatform.pojo.InstitutionExample">
    delete from institution
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="team.managementplatform.pojo.Institution">
    insert into institution (institution_id, qualification_id, user_id, 
      user_phone, institution_name, location, 
      phone, institution_introduction)
    values (#{institutionId,jdbcType=INTEGER}, #{qualificationId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{userPhone,jdbcType=VARCHAR}, #{institutionName,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{institutionIntroduction,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="team.managementplatform.pojo.Institution">
    insert into institution
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="institutionId != null">
        institution_id,
      </if>
      <if test="qualificationId != null">
        qualification_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userPhone != null">
        user_phone,
      </if>
      <if test="institutionName != null">
        institution_name,
      </if>
      <if test="location != null">
        location,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="institutionIntroduction != null">
        institution_introduction,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="institutionId != null">
        #{institutionId,jdbcType=INTEGER},
      </if>
      <if test="qualificationId != null">
        #{qualificationId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userPhone != null">
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="institutionName != null">
        #{institutionName,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="institutionIntroduction != null">
        #{institutionIntroduction,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="team.managementplatform.pojo.InstitutionExample" resultType="java.lang.Long">
    select count(*) from institution
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update institution
    <set>
      <if test="record.institutionId != null">
        institution_id = #{record.institutionId,jdbcType=INTEGER},
      </if>
      <if test="record.qualificationId != null">
        qualification_id = #{record.qualificationId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userPhone != null">
        user_phone = #{record.userPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.institutionName != null">
        institution_name = #{record.institutionName,jdbcType=VARCHAR},
      </if>
      <if test="record.location != null">
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.institutionIntroduction != null">
        institution_introduction = #{record.institutionIntroduction,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update institution
    set institution_id = #{record.institutionId,jdbcType=INTEGER},
      qualification_id = #{record.qualificationId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      user_phone = #{record.userPhone,jdbcType=VARCHAR},
      institution_name = #{record.institutionName,jdbcType=VARCHAR},
      location = #{record.location,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      institution_introduction = #{record.institutionIntroduction,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="team.managementplatform.pojo.Institution">
    update institution
    <set>
      <if test="qualificationId != null">
        qualification_id = #{qualificationId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userPhone != null">
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="institutionName != null">
        institution_name = #{institutionName,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="institutionIntroduction != null">
        institution_introduction = #{institutionIntroduction,jdbcType=VARCHAR},
      </if>
    </set>
    where institution_id = #{institutionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="team.managementplatform.pojo.Institution">
    update institution
    set qualification_id = #{qualificationId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      institution_name = #{institutionName,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      institution_introduction = #{institutionIntroduction,jdbcType=VARCHAR}
    where institution_id = #{institutionId,jdbcType=INTEGER}
  </update>
</mapper>